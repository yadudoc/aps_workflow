sites: [raven-local-mpi]
#sites: [raven]

# We have the mandelbrot generation app defined for all computational
# sites, and the assemble app defined only on localhost. This ensures
# that the compute heavy mandelbrot code runs on the compute resource
# and the IO heavy assemble operation is handled on the local machine.

site.localhost {
     execution {
        type    : "local"                            # Execution is local
        URL     : "localhost"                        # Point at localhost to run locally
     }
     staging             : direct                     # Files are on the same machine, so can be accessed "directly"
     workDirectory       : "/tmp/"${env.USER}"/swiftwork" # Directory where work is done
     maxParallelTasks    : 101                         # Maximum number of parallel tasks
     initialParallelTasks: 100                         # Maximum number of tasks at start
     app.assemble {
        executable: ${env.PWD}"/bin/assemble"
     }
}



# Instructions for Blacklight
# 1. If you are running on the blacklight login nodes, set jobManager: "local:pbs"
site.raven-local-mpi {
    execution {
     	type: "coaster"
	    URL: "raven.cray.com"
    	jobManager: "ssh-cl:pbs"
    	options {
            maxJobs: 1
	        nodeGranularity: 2
    	    maxNodesPerJob: 2
            jobProject: "CI-SES000031"
    	    "jobType" : "single"
    	    jobOptions {
	          	#pbs.aprun: false
		        #pbs.mpp: "64"
                ppn : "32"
            }
        }
    }
    staging             : "local"
    workDirectory       : "/tmp/"${env.USER}"/swiftwork" # Location for intermediate files
    maxParallelTasks    : 101                         # Maximum number of parallel tasks
    initialParallelTasks: 100                         # Maximum number of tasks at start
    app.bash {
        executable      : "/bin/bash"
        env.MACHINE     : "raven"
        env.MPI_APP_PATH: "/home/users/p01953/aps_workflow/mpicatnap"
        env.MPI_PROX_PATH: "/home/users/p01953/aps_workflow/prox"
        env.MPI_PPN     : "32"
        env.MPI_NODES   : "2"
    	options{
	    	jobType: single
    	}
    }
}



TCPPortRange: "50000,51000"                           # TCP port range used by swift to communicate with remote sites
lazyErrors: false                                     # Swift fails immediately upon encountering an error
executionRetries: 0                                   # Set number of retries upon task failures
keepSiteDir: true                                     # Keep Site Dir (useful for debug)
providerStagingPinSwiftFiles: true                    # Pin staging files (useful for debug)
alwaysTransferWrapperLog: true                        # Transfer wrapper logs (useful for debug)
